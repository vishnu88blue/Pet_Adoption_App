import type { Attributes, EnterpriseSSOSettings, OAuthProviders, OAuthStrategy, PasskeySettingsData, PasswordSettingsData, SamlSettings, SignInData, SignUpData, UsernameSettingsData, UserSettingsJSON, UserSettingsJSONSnapshot, UserSettingsResource, Web3Strategy } from '@clerk/types';
import { BaseResource } from './internal';
export type Actions = {
    create_organization: boolean;
    delete_self: boolean;
};
/**
 * @internal
 */
export declare class UserSettings extends BaseResource implements UserSettingsResource {
    id: undefined;
    social: OAuthProviders;
    saml: SamlSettings;
    enterpriseSSO: EnterpriseSSOSettings;
    attributes: Attributes;
    actions: Actions;
    signIn: SignInData;
    signUp: SignUpData;
    passwordSettings: PasswordSettingsData;
    passkeySettings: PasskeySettingsData;
    usernameSettings: UsernameSettingsData;
    socialProviderStrategies: OAuthStrategy[];
    authenticatableSocialStrategies: OAuthStrategy[];
    web3FirstFactors: Web3Strategy[];
    enabledFirstFactorIdentifiers: Array<keyof UserSettingsResource['attributes']>;
    constructor(data: UserSettingsJSON | UserSettingsJSONSnapshot);
    get instanceIsPasswordBased(): boolean;
    get hasValidAuthFactor(): boolean;
    protected fromJSON(data: UserSettingsJSON | UserSettingsJSONSnapshot | null): this;
    __internal_toSnapshot(): UserSettingsJSONSnapshot;
    private getEnabledFirstFactorIdentifiers;
    private getWeb3FirstFactors;
    private getSocialProviderStrategies;
    private getAuthenticatableSocialStrategies;
}
