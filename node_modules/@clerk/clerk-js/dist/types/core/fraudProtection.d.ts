import type { CaptchaChallenge } from '../utils/captcha/CaptchaChallenge';
import type { Clerk, Client } from './resources/internal';
export declare class FraudProtection {
    private client;
    private CaptchaChallengeImpl;
    private static instance;
    private inflightException;
    static getInstance(client: typeof Client, CaptchaChallengeImpl: typeof CaptchaChallenge): FraudProtection;
    constructor(client: typeof Client, CaptchaChallengeImpl: typeof CaptchaChallenge);
    execute<T extends () => Promise<any>, R = Awaited<ReturnType<T>>>(clerk: Clerk, cb: T): Promise<R>;
    managedChallenge(clerk: Clerk): Promise<{} | undefined>;
}
