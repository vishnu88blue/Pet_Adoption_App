import type { ClerkHostRouter } from '@clerk/shared/router';
import type { ClerkOptions, LoadedClerk } from '@clerk/types';
import type { ElementType, ReactNode } from 'react';
import type { ComponentDefinition } from './types';
export declare function wrapperInit({ clerk, options, router, }: {
    clerk: LoadedClerk;
    options: ClerkOptions;
    router: ClerkHostRouter;
}): ({ children }: {
    children: ReactNode;
}) => import("@emotion/react/jsx-runtime").JSX.Element;
export declare function init({ wrapper }: {
    wrapper: ElementType;
}): {
    mount: (element: ElementType, props: any, node: HTMLElement) => void;
    unmount: (node: HTMLElement) => void;
    createElementFromComponentDefinition: (componentDefinition: ComponentDefinition) => import("react").LazyExoticComponent<import("react").ComponentType>;
};
