{"version":3,"sources":["../../src/cache/ResourceCache.ts"],"sourcesContent":["import type { ClientJSONSnapshot, EnvironmentJSONSnapshot } from '@clerk/types';\n\nimport type { IStorage } from '../provider/singleton/types';\nimport type { ResourceCache, ResourceCacheInitOptions } from './types';\n\nfunction createResourceCache<T>(key: string): ResourceCache<T> {\n  if (!key) {\n    throw new Error('Clerk: ResourceCache key is required!');\n  }\n  let storage: IStorage | null = null;\n  let itemKey: string | null = null;\n\n  const init = (opts: ResourceCacheInitOptions) => {\n    if (!opts.storage || !opts.publishableKey) {\n      throw new Error(`Clerk: ResourceCache for ${key} requires storage and publishableKey!`);\n    }\n    itemKey = `${key}_${opts.publishableKey.slice(-5)}`;\n    storage = opts.storage();\n  };\n\n  const checkInit = (): boolean => {\n    return !!storage && !!itemKey;\n  };\n\n  const assertInitiliazed = () => {\n    if (!storage || !itemKey) {\n      throw new Error(`Clerk: ResourceCache for ${key} not initialized!`);\n    }\n  };\n\n  const load = async (): Promise<T | null> => {\n    assertInitiliazed();\n    try {\n      const value = await storage!.get(itemKey!);\n      return value ? JSON.parse(value) : null;\n    } catch (error) {\n      console.log(`Clerk: Error loading value on ${key} from storage:`, error);\n      return null;\n    }\n  };\n\n  const save = async (value: T): Promise<void> => {\n    assertInitiliazed();\n    try {\n      return await storage!.set(itemKey!, JSON.stringify(value));\n    } catch (error) {\n      console.log(`Clerk: Error saving value on ${key} in storage:`, error);\n    }\n  };\n\n  const remove = async (): Promise<void> => {\n    assertInitiliazed();\n    try {\n      return await storage!.set(itemKey!, '');\n    } catch (error) {\n      console.log(`Clerk: Error deleting value on ${key} from storage:`, error);\n    }\n  };\n\n  return { checkInit, init, load, save, remove };\n}\n\nexport const EnvironmentResourceCache = createResourceCache<EnvironmentJSONSnapshot>('__clerk_cache_environment');\nexport const ClientResourceCache = createResourceCache<ClientJSONSnapshot>('__clerk_cache_client');\nexport const SessionJWTCache = createResourceCache<string>('__clerk_cache_session_jwt');\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,SAAS,oBAAuB,KAA+B;AAC7D,MAAI,CAAC,KAAK;AACR,UAAM,IAAI,MAAM,uCAAuC;AAAA,EACzD;AACA,MAAI,UAA2B;AAC/B,MAAI,UAAyB;AAE7B,QAAM,OAAO,CAAC,SAAmC;AAC/C,QAAI,CAAC,KAAK,WAAW,CAAC,KAAK,gBAAgB;AACzC,YAAM,IAAI,MAAM,4BAA4B,GAAG,uCAAuC;AAAA,IACxF;AACA,cAAU,GAAG,GAAG,IAAI,KAAK,eAAe,MAAM,EAAE,CAAC;AACjD,cAAU,KAAK,QAAQ;AAAA,EACzB;AAEA,QAAM,YAAY,MAAe;AAC/B,WAAO,CAAC,CAAC,WAAW,CAAC,CAAC;AAAA,EACxB;AAEA,QAAM,oBAAoB,MAAM;AAC9B,QAAI,CAAC,WAAW,CAAC,SAAS;AACxB,YAAM,IAAI,MAAM,4BAA4B,GAAG,mBAAmB;AAAA,IACpE;AAAA,EACF;AAEA,QAAM,OAAO,YAA+B;AAC1C,sBAAkB;AAClB,QAAI;AACF,YAAM,QAAQ,MAAM,QAAS,IAAI,OAAQ;AACzC,aAAO,QAAQ,KAAK,MAAM,KAAK,IAAI;AAAA,IACrC,SAAS,OAAO;AACd,cAAQ,IAAI,iCAAiC,GAAG,kBAAkB,KAAK;AACvE,aAAO;AAAA,IACT;AAAA,EACF;AAEA,QAAM,OAAO,OAAO,UAA4B;AAC9C,sBAAkB;AAClB,QAAI;AACF,aAAO,MAAM,QAAS,IAAI,SAAU,KAAK,UAAU,KAAK,CAAC;AAAA,IAC3D,SAAS,OAAO;AACd,cAAQ,IAAI,gCAAgC,GAAG,gBAAgB,KAAK;AAAA,IACtE;AAAA,EACF;AAEA,QAAM,SAAS,YAA2B;AACxC,sBAAkB;AAClB,QAAI;AACF,aAAO,MAAM,QAAS,IAAI,SAAU,EAAE;AAAA,IACxC,SAAS,OAAO;AACd,cAAQ,IAAI,kCAAkC,GAAG,kBAAkB,KAAK;AAAA,IAC1E;AAAA,EACF;AAEA,SAAO,EAAE,WAAW,MAAM,MAAM,MAAM,OAAO;AAC/C;AAEO,MAAM,2BAA2B,oBAA6C,2BAA2B;AACzG,MAAM,sBAAsB,oBAAwC,sBAAsB;AAC1F,MAAM,kBAAkB,oBAA4B,2BAA2B;","names":[]}