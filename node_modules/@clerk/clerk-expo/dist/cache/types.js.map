{"version":3,"sources":["../../src/cache/types.ts"],"sourcesContent":["import type { IStorage } from '../provider/singleton/types';\n\nexport interface TokenCache {\n  getToken: (key: string) => Promise<string | undefined | null>;\n  saveToken: (key: string, token: string) => Promise<void>;\n  clearToken?: (key: string) => void;\n}\n\nexport interface ResourceCache<T> {\n  init: (opts: ResourceCacheInitOptions) => void;\n  checkInit: () => boolean;\n  load: () => Promise<T | null>;\n  save: (value: T) => Promise<void>;\n  remove: () => Promise<void>;\n}\n\nexport type ResourceCacheInitOptions = {\n  storage: () => IStorage;\n  publishableKey: string;\n};\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;","names":[]}