{"version":3,"sources":["../../../src/provider/singleton/types.ts"],"sourcesContent":["import type {\n  CredentialReturn,\n  PublicKeyCredentialCreationOptionsWithoutExtensions,\n  PublicKeyCredentialRequestOptionsWithoutExtensions,\n  PublicKeyCredentialWithAuthenticatorAssertionResponse,\n  PublicKeyCredentialWithAuthenticatorAttestationResponse,\n} from '@clerk/types';\n\nimport type { TokenCache } from '../../cache/types';\n\nexport interface IStorage {\n  set: (key: string, value: string) => Promise<void>;\n  get: (key: string) => Promise<string | null>;\n}\n\nexport type BuildClerkOptions = {\n  publishableKey?: string;\n  tokenCache?: TokenCache;\n  /**\n   * Note: Passkey support in Expo is currently in a limited rollout phase.\n   * If you're interested in using this feature, please contact us for early access or additional details.\n   *\n   * @experimental This API is experimental and may change at any moment.\n   */\n  __experimental_passkeys?: {\n    get: ({\n      publicKeyOptions,\n    }: {\n      publicKeyOptions: PublicKeyCredentialRequestOptionsWithoutExtensions;\n    }) => Promise<CredentialReturn<PublicKeyCredentialWithAuthenticatorAssertionResponse>>;\n    create: (\n      publicKeyCredential: PublicKeyCredentialCreationOptionsWithoutExtensions,\n    ) => Promise<CredentialReturn<PublicKeyCredentialWithAuthenticatorAttestationResponse>>;\n    isSupported: () => boolean;\n    isAutoFillSupported: () => Promise<boolean>;\n  };\n  __experimental_resourceCache?: () => IStorage;\n};\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;","names":[]}