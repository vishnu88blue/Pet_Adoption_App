"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var useAuth_exports = {};
__export(useAuth_exports, {
  useAuth: () => useAuth
});
module.exports = __toCommonJS(useAuth_exports);
var import_clerk_react = require("@clerk/clerk-react");
var import_error = require("@clerk/shared/error");
var import_cache = require("../cache");
const useAuth = (initialAuthState) => {
  const { getToken: getTokenBase, ...rest } = (0, import_clerk_react.useAuth)(initialAuthState);
  const getToken = (opts) => getTokenBase(opts).then((token) => {
    if (!opts && import_cache.SessionJWTCache.checkInit()) {
      if (token) {
        void import_cache.SessionJWTCache.save(token);
      } else {
        void import_cache.SessionJWTCache.remove();
      }
    }
    return token;
  }).catch((error) => {
    if (!opts && import_cache.SessionJWTCache.checkInit() && (0, import_error.isNetworkError)(error)) {
      return import_cache.SessionJWTCache.load();
    }
    throw error;
  });
  return { ...rest, getToken };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  useAuth
});
//# sourceMappingURL=useAuth.js.map